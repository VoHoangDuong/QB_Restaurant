#Database
spring.datasource.url=jdbc:mysql://localhost:3306/qb_restaurant_management
spring.datasource.username=root
spring.datasource.password=duong6046237
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#Hibernate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.id.new_generator_mappings = true
spring.jpa.properties.hibernate.show.sql = true
spring.jpa.properties.hibernate.format_sql = true
spring.jpa.generate-ddl=true
spring.jpa.properties.hibernate.hb2dll.auto = update
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB
## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
#file.upload-dir=E:/MODULE_5/C0221H1/QB_RESTAURANT/QB_RESTAURANT_MANAGEMENT/src/main/resources/static/uploads
file.upload-dir=D:/DUONG/QB_RESTAURANT/QB-RESTAURANT/src/main/resources/static/uploads
#file.upload-dir=D:/Java/QB_RESTAURANT/QB_RESTAURANT_MANAGEMENT/src/main/resources/static/uploads
#file.upload-dir=D:/baitap/QB_RESTAURANT/QB_RESTAURANT_MANAGEMENT/src/main/resources/static/uploads
#file.upload-dir=/home/nam/CODEGYM/c0221h1/QB_RESTAURANT_MANAGEMENT/src/main/resources/static/uploads

# Kafka
spring.kafka.bootstrap-servers= 10.20.3.13:31096,10.20.3.11:30126,10.20.3.15:31467
spring.kafka.security.protocol= SASL_PLAINTEXT
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="adminKafka@ccvc";

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

spring.kafka.consumer.group-id=order_group
spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.topic-check-dong-bo=ccvc-update-lichsu-cong
#spring.kafka.consumer.topic-HS-han-che=CCVC_KHO_HS_HAN_CHE
#spring.kafka.consumer.group-HS-han-che-Cong=cong-ccvc-HSHC

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.topic=order_new
#spring.kafka.producer.topic.department=synchronized-department
#spring.kafka.producer.topic.department.kho=synchronized-department-khaithac
#spring.kafka.producer.topic.dang.kho=synchronized-ChiBoDang-khaithac
spring.kafka.producer.properties.max.request.size=2097152
spring.kafka.producer.compression-type = gzip

